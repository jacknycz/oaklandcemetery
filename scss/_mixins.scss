//--------------------------------------------------------------
// Mixins
//--------------------------------------------------------------

/* Breakpoints */
@mixin breakpoint($point) {
	@if $point == lt-tablet {
		@media all and (max-width: 767px) { @content; }
	}
	@if $point == tablet {
		@media all and (min-width: 768px) { @content; }
	}
	@if $point == lt-desktop {
		@media all and (max-width: 979px) { @content; }
	}
	@else if $point == desktop {
		@media all and (min-width: 980px) { @content; }
	}
	@else if $point == widescreen {
		@media all and (min-width: 1200px)  { @content; }
	}
}

@mixin box-shadow($top, $left, $blur, $color, $inset: false) {
	@if $inset {
		-webkit-box-shadow: inset $top $left $blur $color;
		-moz-box-shadow: inset $top $left $blur $color;
		box-shadow: inset $top $left $blur $color;
	} @else {
		-webkit-box-shadow: $top $left $blur $color;
		-moz-box-shadow: $top $left $blur $color;
		box-shadow: $top $left $blur $color;
	}
}

/* Transition */
@mixin transition($time: .2s) {
	-webkit-transition: all $time ease-in-out;
	-moz-transition: all $time ease-in-out;
	-ms-transition: all $time ease-in-out;
	-o-transition: all $time ease-in-out;
	transition: all $time ease-in-out;
}

/* Rounded Corners */
@mixin rounded($radius: 5px) {
	-webkit-border-radius: $radius;
	-moz-border-radius: $radius;
	border-radius: $radius;
}

/* Gradients */
@mixin gradient($from, $to) {
	background: -webkit-gradient(linear, left top, left bottom, from($from), to($to));
	background: -moz-linear-gradient(top,  $from, $to);
	filter:  progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$from}', endColorstr='#{$to}');
}

/* Clearfix */
%clearfix {
	&:before, &:after {
		content: "";
		display: table;
	}
	&:after {
		clear: both;
	}
}

/* Wrap */
.wrap {
	@extend %clearfix;
	margin: 0 auto;
	position: relative;
	max-width: 92%;
	zoom: 1;
	@include breakpoint(tablet) {
		width: 740px;
	}
	@include breakpoint(desktop) {
		width: 960px;
	}
	@include breakpoint(widescreen) {
		width: 1200px;
	}
}